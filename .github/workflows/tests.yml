# .github/workflows/automatic-door-system.yml
name: Automatic Door System Tests

on:
  push:
    paths: 
      - 'drivers/**'
      - 'tests/**' 
      - 'Makefile'
  pull_request:
    paths:
      - 'drivers/**'
      - 'tests/**'
      - 'Makefile'

jobs:
  # 병렬 드라이버 테스트
  test-drivers:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # 한 드라이버 실패해도 다른 드라이버 테스트 계속
      matrix:
        driver: [lcd, ultrasonic]
        include:
          - driver: lcd
            path: drivers/lcd
            test_path: tests/lcd
            artifact_name: lcd-driver-results
          - driver: ultrasonic  
            path: drivers/ultrasonic
            test_path: tests/ultrasonic
            artifact_name: ultrasonic-driver-results
    
    name: Test ${{ matrix.driver }} driver
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y linux-headers-generic build-essential cppcheck
    
    - name: Build ${{ matrix.driver }} driver
      run: |
        cd ${{ matrix.path }}
        make clean
        make
        ls -la *.ko || echo "No .ko files found"
        
    - name: Run ${{ matrix.driver }} unit tests
      run: |
        cd ${{ matrix.test_path }}
        make clean
        make test
    
    - name: MISRA C check for ${{ matrix.driver }}
      run: |
        mkdir -p reports
        cppcheck --addon=misra ${{ matrix.path }}/*.c 2>&1 | tee reports/${{ matrix.driver }}-misra.txt || true
        echo "MISRA check completed for ${{ matrix.driver }}"
    
    - name: Upload ${{ matrix.driver }} test results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          ${{ matrix.path }}/*.ko
          reports/${{ matrix.driver }}-misra.txt
          ${{ matrix.test_path }}/test_*
        if-no-files-found: warn

  # 시스템 통합 테스트
  integration-test:
    runs-on: ubuntu-latest
    needs: test-drivers  # 개별 드라이버 테스트 완료 후 실행
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y linux-headers-generic build-essential
    
    - name: Build entire system
      run: |
        make clean
        make build-drivers
    
    - name: Run integration tests
      run: |
        make test-drivers
    
    - name: System status check
      run: |
        make status
    
    - name: Upload integration results
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: |
          drivers/*/*.ko
          tests/*/test_*
          build-logs.txt

  # 코드 품질 검사
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install quality tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck clang-format
    
    - name: Check code formatting
      run: |
        find drivers/ tests/ -name "*.c" -o -name "*.h" | xargs clang-format --style=file --dry-run --Werror
    
    - name: Advanced static analysis
      run: |
        mkdir -p quality-reports
        # 전체 프로젝트 정적 분석
        cppcheck --enable=all --xml --xml-version=2 drivers/ 2> quality-reports/cppcheck.xml || true
        # MISRA 체크
        cppcheck --addon=misra drivers/ 2> quality-reports/misra-all.txt || true
    
    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      with:
        name: code-quality-reports
        path: quality-reports/

  # 성능 및 메모리 테스트 (시뮬레이션)
  performance-test:
    runs-on: ubuntu-latest
    needs: test-drivers
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install valgrind
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind
    
    - name: Memory leak check
      run: |
        cd tests/lcd
        make
        valgrind --leak-check=full --show-leak-kinds=all ./test_lcd > ../../valgrind-lcd.log 2>&1 || true
        
        cd ../ultrasonic  
        make
        valgrind --leak-check=full --show-leak-kinds=all ./test_ultrasonic > ../../valgrind-ultrasonic.log 2>&1 || true
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-test-results  
        path: |
          valgrind-*.log
